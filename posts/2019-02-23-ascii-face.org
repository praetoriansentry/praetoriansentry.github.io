#+TITLE: Video to ASCII Art
#+DATE:
#+AUTHOR: John Hilliard
#+EMAIL: jhilliard@nextjump.com
#+CREATOR: John Hilliard
#+DESCRIPTION: The website of John Hilliard
#+HTML_DOCTYPE: html5
#+KEYWORDS: architecture, conference
#+SUBTITLE: ./john
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/sakura-dark.css" />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/mine.css" />
#+HTML_HEAD: <meta property="og:title" content="Video to ASCII Art" />
#+HTML_HEAD: <meta property="og:description" content="Converting a video to animated ASCII Art" />
#+HTML_HEAD: <meta property="og:image" content="https://john.dev/img/face.gif" />
#+OPTIONS: toc:nil

For whatever reason, I'm fascinated with [[https://en.wikipedia.org/wiki/ASCII_art][ASCII Art]]. I guess it's
because it reminds me of old school computing and hacking.

I was curious today if I could create animated ASCII Art from a
video. It turned out to be pretty easy.

*Step 1*: I took a very short and simple video of myself on my
phone. I took a video selfie and emailed that to myself.

*Step 2*: I used Adobe Premier, to convert the ~.MOV~ file from my phone
into a series of ~.jpg~ files. Each frame of the video is being
converted to a still frame.

*Step 3*: Each frame of the video is converted from a ~.jpg~ file to
an ASCII art ~.txt~ file. I used an awesome tool called [[https://csl.name/jp2a/][jp2a]] to do the
conversion. This is the actual command I used to do the conversion.

#+BEGIN_SRC bash
find . -type f | sort | xargs -I xxx jp2a --width=200 xxx --output=xxx.txt
#+END_SRC

*Step 4*: I then used ~cat~ to concatenate all of the text files and
 separate them with ~pre~ tags. At this point, I have a very simple
 html document with every frame of the animation inside of it.

*Step 5*: The last step here was to animate the frames.

#+BEGIN_HTML
<script src="https://gist.github.com/praetoriansentry/297152a91354aded5cd0f81ea512a821.js"></script>
#+END_HTML


The basic approach was to hide all but one of the ~pre~ tags. Then
there is a timer that's running regularly to change which ~pre~ tag is
showing.

You can see the final html document [[./ascii-face.html]].

*Step 6*: The last step here was to create a real gif. Since I don't
 know how to convert animated plain text into a gif, I just took a screen
 capture and rendered it as a gif. This is finale result:

#+CAPTION: The final gif
[[file:../img/face.gif]]
